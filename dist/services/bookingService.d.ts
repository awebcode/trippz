import type { CreateBookingInput, UpdateBookingInput, BookingListQuery } from "../validators/bookingValidators";
import type { PaginatedResult } from "../validators/commonValidators";
export declare class BookingService {
    static createBooking(userId: string, data: CreateBookingInput): Promise<{
        user: {
            id: string;
            first_name: string;
            email: string;
            last_name: string | null;
            phone_number: string | null;
        };
        hotel: {
            id: string;
            created_at: Date;
            updated_at: Date;
            name: string;
            address: string;
            rating: number;
            price_per_night: number;
            amenities: string[];
            available_rooms: number;
            description: string | null;
            check_in_time: string | null;
            check_out_time: string | null;
            location: import("@prisma/client/runtime/library").JsonValue | null;
            cancellation_policy: string | null;
            distance_from_center: number | null;
            has_free_cancellation: boolean | null;
            has_breakfast_included: boolean | null;
            has_parking: boolean | null;
            has_pool: boolean | null;
            has_gym: boolean | null;
            has_restaurant: boolean | null;
            has_room_service: boolean | null;
            has_spa: boolean | null;
            has_wifi: boolean | null;
            has_air_conditioning: boolean | null;
            is_pet_friendly: boolean | null;
            is_family_friendly: boolean | null;
            property_type: string | null;
            star_rating: number | null;
        } | null;
        flight: {
            id: string;
            created_at: Date;
            updated_at: Date;
            cancellation_policy: string | null;
            has_wifi: boolean | null;
            flight_number: string;
            airline: string;
            departure_time: Date;
            arrival_time: Date;
            from_airport: string;
            to_airport: string;
            price: number;
            seat_class: string;
            available_seats: number | null;
            aircraft_type: string | null;
            has_entertainment: boolean | null;
            has_power_outlets: boolean | null;
            meal_service: boolean | null;
            baggage_allowance: number | null;
        } | null;
        trip: {
            id: string;
            created_at: Date;
            updated_at: Date;
            theme: string | null;
            user_id: string;
            description: string;
            cancellation_policy: string | null;
            is_family_friendly: boolean | null;
            end_date: Date;
            start_date: Date;
            price: number;
            trip_name: string;
            trip_type: import("@prisma/client").$Enums.TripType;
            max_participants: number | null;
            itinerary: import("@prisma/client/runtime/library").JsonValue | null;
            inclusions: string[];
            exclusions: string[];
            includes_flight: boolean | null;
            includes_hotel: boolean | null;
            includes_activities: boolean | null;
            includes_meals: boolean | null;
            is_guided: boolean | null;
            is_accessible: boolean | null;
            difficulty_level: string | null;
            travel_style: string | null;
        } | null;
    } & {
        id: string;
        created_at: Date;
        updated_at: Date;
        status: import("@prisma/client").$Enums.BookingStatus;
        user_id: string;
        guests: number | null;
        hotel_id: string | null;
        end_date: Date;
        start_date: Date;
        flight_id: string | null;
        trip_id: string | null;
        booking_type: import("@prisma/client").$Enums.BookingType;
        total_price: number;
        special_requests: string | null;
        cancellation_id: string | null;
    }>;
    static getBookings(userId: string, params: BookingListQuery): Promise<PaginatedResult<any>>;
    static getBookingById(userId: string, id: string): Promise<{
        id: string;
        booking_type: import("@prisma/client").$Enums.BookingType;
        status: import("@prisma/client").$Enums.BookingStatus;
        start_date: Date;
        end_date: Date;
        total_price: number;
        guests: number | null;
        special_requests: string | null;
        created_at: Date;
        updated_at: Date;
        user: {
            id: string;
            first_name: string;
            email: string;
            last_name: string | null;
            phone_number: string | null;
        };
        entity_details: {
            id: string;
            name: string;
            from: string;
            to: string;
            departure: Date;
            arrival: Date;
            seat_class: string;
            price: number;
            address?: undefined;
            rating?: undefined;
            price_per_night?: undefined;
            amenities?: undefined;
            type?: undefined;
            description?: undefined;
        } | {
            id: string;
            name: string;
            address: string;
            rating: number;
            price_per_night: number;
            amenities: string[];
            from?: undefined;
            to?: undefined;
            departure?: undefined;
            arrival?: undefined;
            seat_class?: undefined;
            price?: undefined;
            type?: undefined;
            description?: undefined;
        } | {
            id: string;
            name: string;
            type: import("@prisma/client").$Enums.TripType;
            description: string;
            price: number;
            from?: undefined;
            to?: undefined;
            departure?: undefined;
            arrival?: undefined;
            seat_class?: undefined;
            address?: undefined;
            rating?: undefined;
            price_per_night?: undefined;
            amenities?: undefined;
        } | null;
        payment: ({
            payment_details: {
                id: string;
                created_at: Date;
                updated_at: Date;
                provider: string;
                transaction_id: string;
                payment_data: string;
                refund_id: string | null;
                refund_data: string | null;
                paymentId: string;
            } | null;
        } & {
            id: string;
            created_at: Date;
            updated_at: Date;
            booking_id: string;
            payment_method: import("@prisma/client").$Enums.PaymentMethod;
            amount_paid: number;
            payment_status: import("@prisma/client").$Enums.PaymentStatus;
            payment_date: Date;
        })[];
        flight: undefined;
        hotel: undefined;
        trip: undefined;
    }>;
    static updateBooking(userId: string, id: string, data: UpdateBookingInput): Promise<{
        user: {
            id: string;
            first_name: string;
            email: string;
            last_name: string | null;
            phone_number: string | null;
        };
        hotel: {
            id: string;
            created_at: Date;
            updated_at: Date;
            name: string;
            address: string;
            rating: number;
            price_per_night: number;
            amenities: string[];
            available_rooms: number;
            description: string | null;
            check_in_time: string | null;
            check_out_time: string | null;
            location: import("@prisma/client/runtime/library").JsonValue | null;
            cancellation_policy: string | null;
            distance_from_center: number | null;
            has_free_cancellation: boolean | null;
            has_breakfast_included: boolean | null;
            has_parking: boolean | null;
            has_pool: boolean | null;
            has_gym: boolean | null;
            has_restaurant: boolean | null;
            has_room_service: boolean | null;
            has_spa: boolean | null;
            has_wifi: boolean | null;
            has_air_conditioning: boolean | null;
            is_pet_friendly: boolean | null;
            is_family_friendly: boolean | null;
            property_type: string | null;
            star_rating: number | null;
        } | null;
        flight: {
            id: string;
            created_at: Date;
            updated_at: Date;
            cancellation_policy: string | null;
            has_wifi: boolean | null;
            flight_number: string;
            airline: string;
            departure_time: Date;
            arrival_time: Date;
            from_airport: string;
            to_airport: string;
            price: number;
            seat_class: string;
            available_seats: number | null;
            aircraft_type: string | null;
            has_entertainment: boolean | null;
            has_power_outlets: boolean | null;
            meal_service: boolean | null;
            baggage_allowance: number | null;
        } | null;
        trip: {
            id: string;
            created_at: Date;
            updated_at: Date;
            theme: string | null;
            user_id: string;
            description: string;
            cancellation_policy: string | null;
            is_family_friendly: boolean | null;
            end_date: Date;
            start_date: Date;
            price: number;
            trip_name: string;
            trip_type: import("@prisma/client").$Enums.TripType;
            max_participants: number | null;
            itinerary: import("@prisma/client/runtime/library").JsonValue | null;
            inclusions: string[];
            exclusions: string[];
            includes_flight: boolean | null;
            includes_hotel: boolean | null;
            includes_activities: boolean | null;
            includes_meals: boolean | null;
            is_guided: boolean | null;
            is_accessible: boolean | null;
            difficulty_level: string | null;
            travel_style: string | null;
        } | null;
    } & {
        id: string;
        created_at: Date;
        updated_at: Date;
        status: import("@prisma/client").$Enums.BookingStatus;
        user_id: string;
        guests: number | null;
        hotel_id: string | null;
        end_date: Date;
        start_date: Date;
        flight_id: string | null;
        trip_id: string | null;
        booking_type: import("@prisma/client").$Enums.BookingType;
        total_price: number;
        special_requests: string | null;
        cancellation_id: string | null;
    }>;
    static cancelBooking(userId: string, id: string): Promise<{
        message: string;
        booking: {
            id: string;
            created_at: Date;
            updated_at: Date;
            status: import("@prisma/client").$Enums.BookingStatus;
            user_id: string;
            guests: number | null;
            hotel_id: string | null;
            end_date: Date;
            start_date: Date;
            flight_id: string | null;
            trip_id: string | null;
            booking_type: import("@prisma/client").$Enums.BookingType;
            total_price: number;
            special_requests: string | null;
            cancellation_id: string | null;
        };
    }>;
    private static validateHotelAvailability;
    private static validateFlightAvailability;
    private static validateTripAvailability;
    private static calculateHotelPrice;
    private static calculateFlightPrice;
    private static calculateTripPrice;
}
//# sourceMappingURL=bookingService.d.ts.map