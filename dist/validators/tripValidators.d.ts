import { z } from "zod";
export declare const createTripSchema: z.ZodObject<{
    trip_name: z.ZodString;
    description: z.ZodString;
    start_date: z.ZodEffects<z.ZodString, string, string>;
    end_date: z.ZodEffects<z.ZodString, string, string>;
    trip_type: z.ZodEnum<["ADVENTURE", "MEDICAL", "BUSINESS", "LEISURE"]>;
    price: z.ZodNumber;
    destination_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    max_participants: z.ZodOptional<z.ZodNumber>;
    itinerary: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    inclusions: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    exclusions: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    cancellation_policy: z.ZodOptional<z.ZodString>;
    images: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    description: string;
    end_date: string;
    start_date: string;
    price: number;
    trip_name: string;
    trip_type: "ADVENTURE" | "MEDICAL" | "BUSINESS" | "LEISURE";
    images?: string[] | undefined;
    cancellation_policy?: string | undefined;
    destination_ids?: string[] | undefined;
    max_participants?: number | undefined;
    itinerary?: Record<string, string> | undefined;
    inclusions?: string[] | undefined;
    exclusions?: string[] | undefined;
}, {
    description: string;
    end_date: string;
    start_date: string;
    price: number;
    trip_name: string;
    trip_type: "ADVENTURE" | "MEDICAL" | "BUSINESS" | "LEISURE";
    images?: string[] | undefined;
    cancellation_policy?: string | undefined;
    destination_ids?: string[] | undefined;
    max_participants?: number | undefined;
    itinerary?: Record<string, string> | undefined;
    inclusions?: string[] | undefined;
    exclusions?: string[] | undefined;
}>;
export declare const updateTripSchema: z.ZodObject<{
    trip_name: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    start_date: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    end_date: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    trip_type: z.ZodOptional<z.ZodEnum<["ADVENTURE", "MEDICAL", "BUSINESS", "LEISURE"]>>;
    price: z.ZodOptional<z.ZodNumber>;
    destination_ids: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    max_participants: z.ZodOptional<z.ZodNumber>;
    itinerary: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    inclusions: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    exclusions: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    cancellation_policy: z.ZodOptional<z.ZodString>;
    images: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    images?: string[] | undefined;
    description?: string | undefined;
    cancellation_policy?: string | undefined;
    end_date?: string | undefined;
    start_date?: string | undefined;
    price?: number | undefined;
    trip_name?: string | undefined;
    trip_type?: "ADVENTURE" | "MEDICAL" | "BUSINESS" | "LEISURE" | undefined;
    destination_ids?: string[] | undefined;
    max_participants?: number | undefined;
    itinerary?: Record<string, string> | undefined;
    inclusions?: string[] | undefined;
    exclusions?: string[] | undefined;
}, {
    images?: string[] | undefined;
    description?: string | undefined;
    cancellation_policy?: string | undefined;
    end_date?: string | undefined;
    start_date?: string | undefined;
    price?: number | undefined;
    trip_name?: string | undefined;
    trip_type?: "ADVENTURE" | "MEDICAL" | "BUSINESS" | "LEISURE" | undefined;
    destination_ids?: string[] | undefined;
    max_participants?: number | undefined;
    itinerary?: Record<string, string> | undefined;
    inclusions?: string[] | undefined;
    exclusions?: string[] | undefined;
}>;
export declare const searchTripsSchema: z.ZodObject<{
    page: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
    limit: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
    sortBy: z.ZodDefault<z.ZodOptional<z.ZodEnum<["created_at", "start_date", "end_date", "price", "trip_name"]>>>;
    sortOrder: z.ZodDefault<z.ZodOptional<z.ZodEnum<["asc", "desc"]>>>;
    trip_type: z.ZodOptional<z.ZodEnum<["ADVENTURE", "MEDICAL", "BUSINESS", "LEISURE"]>>;
    destination: z.ZodOptional<z.ZodString>;
    start_date: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    end_date: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    minPrice: z.ZodOptional<z.ZodNumber>;
    maxPrice: z.ZodOptional<z.ZodNumber>;
    duration_min: z.ZodOptional<z.ZodNumber>;
    duration_max: z.ZodOptional<z.ZodNumber>;
    min_rating: z.ZodOptional<z.ZodNumber>;
    max_participants: z.ZodOptional<z.ZodNumber>;
    has_availability: z.ZodOptional<z.ZodBoolean>;
    includes_flight: z.ZodOptional<z.ZodBoolean>;
    includes_hotel: z.ZodOptional<z.ZodBoolean>;
    includes_activities: z.ZodOptional<z.ZodBoolean>;
    includes_meals: z.ZodOptional<z.ZodBoolean>;
    is_guided: z.ZodOptional<z.ZodBoolean>;
    is_family_friendly: z.ZodOptional<z.ZodBoolean>;
    is_accessible: z.ZodOptional<z.ZodBoolean>;
    has_free_cancellation: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    limit: number;
    page: number;
    sortBy: "created_at" | "end_date" | "start_date" | "price" | "trip_name";
    sortOrder: "asc" | "desc";
    minPrice?: number | undefined;
    maxPrice?: number | undefined;
    has_free_cancellation?: boolean | undefined;
    is_family_friendly?: boolean | undefined;
    end_date?: string | undefined;
    start_date?: string | undefined;
    destination?: string | undefined;
    trip_type?: "ADVENTURE" | "MEDICAL" | "BUSINESS" | "LEISURE" | undefined;
    max_participants?: number | undefined;
    duration_min?: number | undefined;
    duration_max?: number | undefined;
    min_rating?: number | undefined;
    has_availability?: boolean | undefined;
    includes_flight?: boolean | undefined;
    includes_hotel?: boolean | undefined;
    includes_activities?: boolean | undefined;
    includes_meals?: boolean | undefined;
    is_guided?: boolean | undefined;
    is_accessible?: boolean | undefined;
}, {
    limit?: number | undefined;
    page?: number | undefined;
    sortBy?: "created_at" | "end_date" | "start_date" | "price" | "trip_name" | undefined;
    sortOrder?: "asc" | "desc" | undefined;
    minPrice?: number | undefined;
    maxPrice?: number | undefined;
    has_free_cancellation?: boolean | undefined;
    is_family_friendly?: boolean | undefined;
    end_date?: string | undefined;
    start_date?: string | undefined;
    destination?: string | undefined;
    trip_type?: "ADVENTURE" | "MEDICAL" | "BUSINESS" | "LEISURE" | undefined;
    max_participants?: number | undefined;
    duration_min?: number | undefined;
    duration_max?: number | undefined;
    min_rating?: number | undefined;
    has_availability?: boolean | undefined;
    includes_flight?: boolean | undefined;
    includes_hotel?: boolean | undefined;
    includes_activities?: boolean | undefined;
    includes_meals?: boolean | undefined;
    is_guided?: boolean | undefined;
    is_accessible?: boolean | undefined;
}>;
export declare const tripAvailabilitySchema: z.ZodObject<{
    trip_id: z.ZodString;
    start_date: z.ZodEffects<z.ZodString, string, string>;
    end_date: z.ZodEffects<z.ZodString, string, string>;
    participants: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    end_date: string;
    start_date: string;
    trip_id: string;
    participants: number;
}, {
    end_date: string;
    start_date: string;
    trip_id: string;
    participants?: number | undefined;
}>;
export type CreateTripInput = z.infer<typeof createTripSchema>;
export type UpdateTripInput = z.infer<typeof updateTripSchema>;
export type SearchTripsInput = z.infer<typeof searchTripsSchema>;
export type TripAvailabilityInput = z.infer<typeof tripAvailabilitySchema>;
//# sourceMappingURL=tripValidators.d.ts.map